{
	"info": {
		"_postman_id": "5ff0c751-0d24-4103-95ed-322e0d2c7529",
		"name": "Scheduler",
		"description": "Scheduler postman collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:8080/api/v1/professors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.position).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData.name).to.eql(\"name\");\r",
							"  pm.expect(jsonData.position).to.eql(\"доц.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"name\",\"position\":\"доц.\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/professors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"professors"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/api/v1/professors/all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/professors/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"professors",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/api/v1/professors with unsuitable position",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.timestamp).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.error).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.trace).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.path).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"name\",\"position\":\"position\"}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/professors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"professors"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/api/v1/professors/6f588abd-e769-4054-9145-199bb381a50e Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.timestamp).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.error).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.trace).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.path).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/professors/6f588abd-e769-4054-9145-199bb381a50e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"professors",
						"6f588abd-e769-4054-9145-199bb381a50e"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/api/v1/programs/all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/programs/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"programs",
						"all"
					]
				}
			},
			"response": []
		}
	]
}